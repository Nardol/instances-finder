name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect docs-only changes
        id: changes
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            base="${{ github.event.pull_request.base.sha }}"
            head="${{ github.sha }}"
          else
            base="${{ github.event.before }}"
            head="${{ github.sha }}"
          fi
          echo "Base: $base"; echo "Head: $head"
          git diff --name-only "$base" "$head" > files.txt || true
          echo "Changed files:"; cat files.txt || true
          if [[ ! -s files.txt ]]; then
            echo "files_changed=false" >> "$GITHUB_OUTPUT"
            echo "docs_only=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if grep -qvE '\\.md$' files.txt; then
            echo "docs_only=false" >> "$GITHUB_OUTPUT"
          else
            echo "docs_only=true" >> "$GITHUB_OUTPUT"
          fi
          echo "files_changed=true" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install JS deps
        if: steps.changes.outputs.docs_only != 'true'
        run: npm ci || npm install
      - uses: dtolnay/rust-toolchain@stable
        if: steps.changes.outputs.docs_only != 'true'
      - uses: Swatinem/rust-cache@v2
        if: steps.changes.outputs.docs_only != 'true'
      - name: Ensure Clippy
        if: steps.changes.outputs.docs_only != 'true'
        run: rustup component add clippy
      - name: Ensure rustfmt
        if: steps.changes.outputs.docs_only != 'true'
        run: rustup component add rustfmt
      - name: Run all CI checks
        if: steps.changes.outputs.docs_only != 'true'
        run: make ci-checks
      - name: Skip checks (docs-only change)
        if: steps.changes.outputs.docs_only == 'true'
        run: echo "Docs-only change detected; skipping CI checks."

  linux-appimage:
    runs-on: ubuntu-latest
    needs: [checks]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install system deps (Tauri)
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev \
            libayatana-appindicator3-dev librsvg2-dev libsoup2.4-dev \
            libjavascriptcoregtk-4.0-dev
      - name: Install JS deps
        run: npm ci || npm install
      - name: Build AppImage
        run: npm run tauri:build:appimage
      - name: Build Debian package
        run: npm run tauri:build:deb
      - uses: actions/upload-artifact@v4
        with:
          name: appimage
          path: src-tauri/target/release/bundle/appimage/*.AppImage
      - uses: actions/upload-artifact@v4
        with:
          name: deb
          path: src-tauri/target/release/bundle/deb/*.deb

  windows-nsis:
    runs-on: windows-latest
    needs: [checks]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install JS deps
        run: npm ci || npm install
      - name: Build NSIS installer
        run: npm run tauri:build:win:nsis
      - uses: actions/upload-artifact@v4
        with:
          name: windows-nsis
          path: src-tauri/target/release/bundle/nsis/*.exe
