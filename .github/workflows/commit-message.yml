name: Commit Message Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-commit-messages:
    runs-on: ubuntu-latest
    # Skip for Dependabot PRs/commits
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Validate commit messages (push)
        if: github.event_name == 'push'
        run: |
          set -euo pipefail
          echo "Checking commit: ${{ github.sha }}"
          subject=$(git log --format=%s -n 1 ${{ github.sha }})
          echo "$subject" | bash scripts/validate-commit-msg.sh || {
            echo "\nCommit message validation failed for ${{ github.sha }}"; exit 1; }

      - name: Validate commit messages (PR range)
        if: github.event_name == 'pull_request'
        run: |
          set -euo pipefail
          base_ref="origin/${{ github.base_ref }}"
          git fetch origin "${{ github.base_ref }}" --unshallow || git fetch origin "${{ github.base_ref }}" --depth=1000
          echo "Checking range: ${base_ref}..HEAD"
          mapfile -t subjects < <(git log --format=%s "${base_ref}..HEAD")
          if [[ ${#subjects[@]} -eq 0 ]]; then
            echo "No commits to check."; exit 0; fi
          i=0
          for s in "${subjects[@]}"; do
            i=$((i+1))
            printf '%s\n' "$s" | bash scripts/validate-commit-msg.sh || {
              echo "\nCommit message validation failed for commit #$i in PR."; exit 1; }
          done
