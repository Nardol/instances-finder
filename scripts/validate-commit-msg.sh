#!/usr/bin/env bash
set -euo pipefail

# Validate a commit message subject (first line).
# Rules:
# 1) ASCII-only to approximate English-only requirement
# 2) Conventional Commits minimal format: type(scope)?: subject
#    Allowed types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert
#    Exceptions: lines starting with "Revert " (generated by git revert) are allowed.

msg_file="${1:-}"
subject=""

if [[ -n "${msg_file}" && -f "${msg_file}" ]]; then
  while IFS= read -r line; do
    # Skip comments and empty lines
    [[ -z "$line" ]] && continue
    [[ "$line" =~ ^# ]] && continue
    subject="$line"
    break
  done <"$msg_file"
else
  # Read from stdin if no file provided
  subject="$(cat)"
fi

if [[ -z "$subject" ]]; then
  echo "Commit message subject is empty." >&2
  exit 1
fi

# Allow native git revert messages
if [[ "$subject" =~ ^Revert\  ]]; then
  exit 0
fi

# Allow merge commits (generated by Git or GitHub UI)
if [[ "$subject" =~ ^Merge\  ]]; then
  exit 0
fi

# 1) ASCII-only check
if printf '%s' "$subject" | LC_ALL=C grep -q '[^ -~]'; then
  echo "Non-ASCII characters detected. Please write commit messages in English (ASCII only)." >&2
  echo "Offending subject: $subject" >&2
  exit 1
fi

# 2) Conventional Commit minimal regex
cc_regex='^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\([a-z0-9._-]+\))?(!)?: .+'
if ! printf '%s' "$subject" | grep -Eq "$cc_regex"; then
  cat >&2 <<EOF
Commit message must follow Conventional Commits (e.g., "fix: handle error" or "build(deb): relax deps").
Allowed types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert
Subject must be present after the colon.
Got: $subject
EOF
  exit 1
fi

exit 0
